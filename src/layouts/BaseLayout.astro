---
import BaseHead from "./BaseHead.astro";
import NavListItem from "@components/NavListItem.astro";
import pageSize from "src/config.js";
import config from "src/config.js";
export interface Props {
  title: string;
  description?: string;
  activeLink?: string;
}

const {
  title,
  description = "My blog",
  activeLink = null,
} = Astro.props as Props;
const { navLinks } = pageSize;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="bg-sky-900">
    <a
      href="#main"
      class="absolute bg-info text-info-content px-6 py-2 rounded-br-md translate-x-[-100%] focus-within:translate-x-0 transition-all"
      >Skip navigation</a
    >
    <header class="container mx-auto flex items-center justify-between mb-16">
      <div class="p-4">
        <!-- Logo -->
        <img
          height="25"
          width="50"
          src="public/WESlogo.png"
          alt="code f logo"
          class="rounded-md h-fit self-center justify-self-center"
        />
      </div>

      <label
        aria-label="Hamburger Menu"
        id="nav-toggle"
        class="btn btn-circle swap swap-rotate fixed z-[999] top-4 right-4 hidden"
        aria-controls="primary-nav"
        aria-expanded="false"
      >
        <input type="checkbox" />
        <!-- hamburger icon -->
        <svg
          class="swap-off fill-current"
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 512 512"
        >
          <path
            d="M64,384H448V341.33H64Zm0-106.67H448V234.67H64ZM64,128v42.67H448V128Z"
          ></path>
        </svg>
        <!-- close icon -->
        <svg
          class="swap-on fill-current"
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 512 512"
        >
          <polygon
            points="400 145.49 366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49"
          ></polygon>
        </svg>
      </label>

      <nav class="mr-6">
        <ul
          id="primary-nav"
          class="flex grow gap-8 items-center justify-center z-[100]"
          data-visible="false"
        >
          <NavListItem
            navLink="home"
            activeLink={activeLink}
            icon='<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" "text-white" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" /></svg>'
          />

          <NavListItem
            navLink="About"
            activeLink={activeLink}
            icon='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z" /</svg>'
          />

          <NavListItem
            navLink="WESBlog"
            activeLink={activeLink}
            icon='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75" /></svg>'
            color="text-white"
          />

          <NavListItem
            navLink="Ambassadors and Reps"
            activeLink={activeLink}
            icon='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 7.125C2.25 6.504 2.754 6 3.375 6h6c.621 0 1.125.504 1.125 1.125v3.75c0 .621-.504 1.125-1.125 1.125h-6a1.125 1.125 0 01-1.125-1.125v-3.75zM14.25 8.625c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v8.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-8.25zM3.75 16.125c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-2.25z" /></svg>'
          />

          <NavListItem
            navLink="Meet the Team"
            activeLink={activeLink}
            icon='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 01-.825-.242m9.345-8.334a2.126 2.126 0 00-.476-.095 48.64 48.64 0 00-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0011.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155" /></svg>'
          />

          <NavListItem
            navLink="Join Us"
            activeLink={activeLink}
            icon='<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z" /></svg>'
          />

          <li>
            <!-- Theme, Light/Dark mode -->
            <label id="themeSetting" class="swap swap-rotate">
              <!-- this hidden checkbox controls the state -->
              <input type="checkbox" />
              <!-- sun icon -->
              <svg
                data-set-theme="light"
                data-act-class="ACTIVECLASS"
                class="swap-on fill-current w-6 h-6"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
              >
                <path
                  d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z"
                ></path>
              </svg>
              <!-- moon icon -->
              <svg
                data-set-theme="night"
                data-act-class="ACTIVECLASS"
                class="swap-off fill-current w-6 h-6"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
              >
                <path
                  d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z"
                ></path>
              </svg>
            </label>
          </li>
        </ul>
      </nav>
    </header>

    <main id="main" class="container mx-auto">
      <slot />
    </main>

    <svg
      xmlns="http://www.w3.org/2000/svg"
      id="scrollButton"
      viewBox="0 0 512 512"
      class="w-10 h-10 fill-primary fixed bottom-5 right-5 animate-[jump_1500ms_infinite] cursor-pointer bg-base-100 rounded-full"
      style="display: none"
    >
      <path
        d="M256 0C114.6 0 0 114.6 0 256c0 141.4 114.6 256 256 256s256-114.6 256-256C512 114.6 397.4 0 256 0zM382.6 254.6c-12.5 12.5-32.75 12.5-45.25 0L288 205.3V384c0 17.69-14.33 32-32 32s-32-14.31-32-32V205.3L174.6 254.6c-12.5 12.5-32.75 12.5-45.25 0s-12.5-32.75 0-45.25l103.1-103.1C241.3 97.4 251.1 96 256 96c4.881 0 14.65 1.391 22.65 9.398l103.1 103.1C395.1 221.9 395.1 242.1 382.6 254.6z"
      ></path>
    </svg>

    <footer class="border-t px-4 py-6 mt-6">
      <p class="text-center text-sm text-white">
        &copy; {new Date().getFullYear()}
        CodeF
      </p>
    </footer>
    <style>
      html {
        --svg-totalLength: 844;
      }

      html[data-theme="night"] {
        --fill-color: 142 72% 29%;
        --stroke-color: 217 33% 17%;
        --hamburger-bg: 0 0% 30%;
        color-scheme: dark;
      }

      html[data-theme="light"] {
        --fill-color: 173 80% 40%;
        --stroke-color: 213 27% 84%;
        --hamburger-bg: 0 0% 70%;
        color-scheme: light;
      }

      /* Mobile Navigation */
      @media (max-width: 640px) {
        ul#primary-nav {
          position: fixed;
          inset: 0 0 0 30%;
          flex-direction: column;
          padding: min(30vh, 10rem) 2em;
          transform: translateX(100%);
          transition: transform 500ms ease-in-out;
          background: hsl(var(--hamburger-bg) / 0.5);
          backdrop-filter: blur(2rem);
        }

        ul#primary-nav[data-visible="true"] {
          transform: translateX(0);
        }

        label#nav-toggle {
          display: grid;
        }
      }

      /* Logo & Theme SVG color */
      header path {
        fill: hsl(var(--fill-color));
      }
      header polygon {
        fill: hsl(var(--er));
      }
    </style>

    <style is:global>
      ::selection {
        background-color: hsl(var(--a));
        color: hsl(var(--ac));
      }

      /* Scrollbar */
      ::-webkit-scrollbar {
        width: auto;
      }

      ::-webkit-scrollbar-track {
        background-color: hsl(var(--b3));
        border-radius: 100vmax;
        margin: 0.25rem;
      }

      ::-webkit-scrollbar-thumb {
        background-color: hsl(var(--bc));
        border-radius: 100vmax;
      }

      ::-webkit-scrollbar-thumb:hover {
        background-color: hsl(var(--bc) / 0.7);
        border-radius: 100vmax;
      }

      @supports (scrollbar-color: black white) {
        * {
          scrollbar-color: hsl(var(--bc)) hsl(var(--b3));
        }
      }
    </style>
    <script>
      // Navigation / Hamburger menu - control
      const nav = document.querySelector<HTMLUListElement>("#primary-nav");
      const navToggle = document.querySelector<HTMLLabelElement>("#nav-toggle");
      const navToggleInput =
        document.querySelector<HTMLInputElement>("#nav-toggle input");

      navToggle.addEventListener("change", () => {
        if (nav.getAttribute("data-visible") === "false") {
          nav.setAttribute("data-visible", "true");
          nav.setAttribute("aria-expanded", "true");
        } else if (nav.getAttribute("data-visible") === "true") {
          nav.setAttribute("data-visible", "false");
          nav.setAttribute("aria-expanded", "false");
        }
      });

      document.querySelector("main").addEventListener("click", () => {
        if (nav.getAttribute("data-visible") === "true") {
          nav.setAttribute("data-visible", "false");
          nav.setAttribute("aria-expanded", "false");
          navToggleInput.checked = !navToggleInput.checked;
        }
      });

      // Scroll To Top button - control
      const scrollButton = document.querySelector<SVGElement>("#scrollButton");
      scrollButton.addEventListener("click", () => {
        window.scroll({
          top: 0,
          left: 0,
          behavior: "smooth",
        });
      });
      window.addEventListener("scroll", () => {
        if (document.documentElement.scrollTop > window.innerHeight / 4) {
          scrollButton.style.display = "block";
        } else {
          scrollButton.style.display = "none";
        }
      });

      // Theme stuff
      import { themeChange } from "theme-change";
      themeChange();
      if (
        localStorage["theme"] === "light" ||
        document.querySelector("html").getAttribute("data-theme") === "light"
      ) {
        document.querySelector<HTMLInputElement>(
          "#themeSetting > input"
        ).checked = true;
      }
    </script>
  </body>
</html>
